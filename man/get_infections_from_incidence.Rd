% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipe.R
\name{get_infections_from_incidence}
\alias{get_infections_from_incidence}
\title{Infer timeseries of infection events from incidence data of delayed observations}
\usage{
get_infections_from_incidence(
  incidence_data,
  smoothing_method = "LOESS",
  deconvolution_method = "Richardson-Lucy delay distribution",
  delay,
  is_partially_reported_data = FALSE,
  delay_until_final_report = NULL,
  output_infection_incidence_only = TRUE,
  correct_before_smoothing = TRUE,
  ref_date = NULL,
  time_step = "day",
  ...
)
}
\arguments{
\item{incidence_data}{An object containing incidence data through time.
It can either be:
\itemize{
\item A list with two elements:
\enumerate{
\item A numeric vector named \code{values}: the incidence recorded on consecutive time steps.
\item An integer named \code{index_offset}: the offset, counted in number of time steps,
by which the first value in \code{values} is shifted compared to a reference time step
This parameter allows one to keep track of the date of the first value in \code{values}
without needing to carry a \code{date} column around.
A positive offset means \code{values} are delayed in the future compared to the reference values.
A negative offset means the opposite.
}
\item A numeric vector. The vector corresponds to the \code{values} element
descrived above, and \code{index_offset} is implicitely zero.
This means that the first value in \code{incidence_data}
is associated with the reference time step (no shift towards the future or past).
}}

\item{smoothing_method}{string. Method used to smooth the original incidence data.
Available options are:
\itemize{
\item{'LOESS', implemented in \code{\link{.smooth_LOESS}}}
}}

\item{deconvolution_method}{string. Method used to infer timings of infection
events from the original incidence data (aka deconvolution step).
Available options are:
\itemize{
\item{'Richardson-Lucy delay distribution',
implemented in \code{\link{.deconvolve_incidence_Richardson_Lucy}}}
}}

\item{delay}{Single delay or list of delays.
Each delay can be one of:
\itemize{
\item{a list representing a distribution object}
\item{a discretized delay distribution vector}
\item{a discretized delay distribution matrix}
\item{a dataframe containing empirical delay data}
}}

\item{is_partially_reported_data}{boolean.
Set to \code{TRUE} if \code{incidence_data} represents delayed observations
of infection events that themselves rely on further-delayed observations.}

\item{delay_until_final_report}{Single delay or list of delays.
Each delay can be one of:
\itemize{
\item{a list representing a distribution object}
\item{a discretized delay distribution vector}
\item{a discretized delay distribution matrix}
\item{a dataframe containing empirical delay data}
}}

\item{output_infection_incidence_only}{boolean.
Should the output contain only the estimated infection incidence?
(as opposed to containing results for intermediary steps)}

\item{correct_before_smoothing}{Boolean.
Default is TRUE, parameter exists only for comparison purposes.}

\item{ref_date}{Date. Optional. Date of the first data entry in \code{incidence_data}}

\item{time_step}{string. Time between two consecutive incidence datapoints.
"day", "2 days", "week", "year"... (see \code{\link[base]{seq.Date}} for details)}

\item{...}{
  Arguments passed on to \code{\link[=.smooth_LOESS]{.smooth_LOESS}}, \code{\link[=.deconvolve_incidence_Richardson_Lucy]{.deconvolve_incidence_Richardson_Lucy}}, \code{\link[=merge_outputs]{merge_outputs}}, \code{\link[=correct_for_partially_observed_data]{correct_for_partially_observed_data}}
  \describe{
    \item{\code{data_points_incl}}{integer. Size of the window used in the LOESS algorithm.
The \code{span} parameter passed to \code{\link[stats]{loess}} is computed as
the ratio of \code{data_points_incl} and the number of time steps in the input data.}
    \item{\code{degree}}{integer. LOESS degree. Must be 0, 1 or 2.}
    \item{\code{initial_Re_estimate_window}}{integer. In order to help with the smoothing, the function extends
the data back in time, padding with values obtained by assuming a constant Re. This parameter represents
the number of timesteps in the beginning of \code{incidence_input} to take into account when computing
the average initial Re.}
    \item{\code{left_pad_with_zeroes}}{boolean. Default is FALSE. Used for testing only.}
    \item{\code{delay_distribution}}{numeric square matrix or vector.}
    \item{\code{threshold_chi_squared}}{numeric scalar. Threshold for chi-squared values under which the R-L algorithm stops.}
    \item{\code{constant_right_padding}}{Boolean. Default is FALSE. Only used for testing.}
    \item{\code{max_iterations}}{integer. Maximum threshold for the number of iterations in the R-L algorithm.}
    \item{\code{verbose}}{Boolean. Print verbose output?}
    \item{\code{cutoff_observation_probability}}{value between 0 and 1.
Only datapoints for timesteps that have a probability of observing a event
higher than \code{cutoff_observation_probability} are kept.
The few datapoints with a lower probability to be observed are trimmed off
the tail of the timeseries.}
  }}
}
\value{
Time series of infections through time.
If \code{ref_date} is provided then a date column is included with the output.
}
\description{
This function takes as input incidence data of delayed observations of infections events,
as well as the probability distribution(s) of the delay(s).
It returns an inferred incidence of infection events.
}
\details{
This function can account for the observations being dependent on future delayed observations,
with the \code{is_partially_reported_data} flag.
For instance, if the incidence data represents symptom onset events, usually these events
are dependent on a secondary delayed observation: a case confirmation typically, or
a hospital admission or any other type of event.
When setting \code{is_partially_reported_data} to \code{TRUE},
use the \code{delay_until_final_report} argument to specify the delay
from infection until this secondary delayed observation.
}
\examples{
## Basic usage of get_infections_from_incidence
# Recovering infection events from case incidence data assuming distinct gamma
# distributions for the delay between infection and symptom onset, and the delay
# between symptom onset and case reporting.

shape_incubation = 3.2
scale_incubation = 1.3
delay_incubation <- list(name="gamma", shape = shape_incubation, scale = scale_incubation)

shape_onset_to_report = 2.7
scale_onset_to_report = 1.6
delay_onset_to_report <- list(name="gamma",
                              shape = shape_onset_to_report,
                              scale = scale_onset_to_report)

infections_1 <- get_infections_from_incidence(
  HK_incidence_data$case_incidence,
  delay = list(delay_incubation, delay_onset_to_report)
)


## Advanced usage of get_infections_from_incidence
# Recovering infection events from symptom onset data, assuming the same delay
# distributions as above

infections_2 <- get_infections_from_incidence(
  HK_incidence_data$onset_incidence,
  delay = delay_incubation,
  is_partially_reported_data = TRUE,
  delay_until_final_report = delay_onset_to_report,
  ref_date = HK_incidence_data$date[1]
)
}
